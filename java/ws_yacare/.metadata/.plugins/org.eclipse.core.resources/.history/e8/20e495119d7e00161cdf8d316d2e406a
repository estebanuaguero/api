package org.yacare.bo;

import java.util.ArrayList;
import java.util.List;

import org.utiljdbc.ConnectionWrapper;
import org.yacare.model.AnnualEnrollment;

public class AnnualEnrollmentBo extends AbstractBo {

	private final String MSG_2 = "Error al tratar de obtener las matr√≠culas anuales.";

	public List<AnnualEnrollment> getAnnualEnrollments(Integer offset,
			Integer limit, String idStudent, Boolean lastAdmission) {
		try {

			if (offset == null) {
				offset = 0;
			}
			if (limit == null) {
				limit = 5;
			}

			if (limit > 100) {
				limit = 100;
			}

			ConnectionWrapper connectionWrapper = this.getDataSourceWrapper()
					.getConnectionWrapper();

			String sql = null;

			List<Object> list = null;
			

			if (idStudent == null || idStudent.trim().length() == 0 && lastAdmission == null) {
				sql = "SELECT * FROM yacare.f_annual_enrollment(?, ?);";

				list = connectionWrapper.findToJsonArray(sql,
						AnnualEnrollment.class, offset, limit);
			}

			

			if (idStudent != null && idStudent.trim().length() > 0) {
				sql = "SELECT * FROM yacare.f_annual_enrollment(?, ?, ?);";

				list = connectionWrapper.findToJsonArray(sql,
						AnnualEnrollment.class, offset, limit, idStudent);
			}
			if (idStudent == null || idStudent.trim().length() == 0) {
				sql = "SELECT * FROM yacare.f_annual_enrollment(?, ?);";

				list = connectionWrapper.findToJsonArray(sql,
						AnnualEnrollment.class, offset, limit);
			}

			List<AnnualEnrollment> annualEnrollments = new ArrayList<AnnualEnrollment>();

			for (Object o : list) {
				annualEnrollments.add((AnnualEnrollment) o);
			}

			connectionWrapper.close();

			return annualEnrollments;

		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException(MSG_2);
		}
	}

}
