package org.yacare.api.interfaces;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.yacare.model.BloodFactor;

@javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringCodegen", date = "2016-09-12T14:42:20.090Z")
@Api(value = "blood_factors", description = "the blood_factors API")
public interface BloodFactorsApi {

	public static String tagName = "BloodFactor";
	public static String notes = "Factor Sanguineo de una Persona. Ver https://es.wikipedia.org/wiki/Grupo_sangu%C3%ADneo";

	public static String url = "/blood_factors";
	public static String urlId = url + "/{id}";
	public static String produces = "application/json";

	
	public static String msg200_2 = "Retorna un listado de factores sanguineos";


	public static String msg3 = "Identificador del factor sanguineo";
	public static String msg4 = "id";

	public static String msg5 = "Factor sanguineo de una persona";
	public static String msg6 = "Desplazamiento de la lista de resultados devueltos por esta cantidad. El valor predeterminado es cero.";
	public static String msg7 = "Número de objetos que se recuperará. El valor predeterminado es 5, el máximo es 100.";
	public static String msg8 = "offset";
	public static String msg9 = "limit";

	// ---------------------------------------------------------------------------------------
	
	public static String endPoint1 = "Factor sanguineo por id";
	public static String return1 = "Retorna un factor sanguineo";

	@ApiOperation(value = msg5, notes = notes, response = BloodFactor.class, responseContainer = "List", tags = { tagName })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = BloodFactorsApi.msg200_2, response = BloodFactor.class),
			@ApiResponse(code = 404, message = org.yacare.api.interfaces.Api.msg404),
			@ApiResponse(code = 500, message = org.yacare.api.interfaces.Api.msg500) })
	@RequestMapping(value = url, produces = { produces }, method = RequestMethod.GET)
	ResponseEntity<List<BloodFactor>> bloodFactorsGet(
			@ApiParam(value = msg6) @RequestParam(value = msg8, required = false) Integer offset,
			@ApiParam(value = msg7) @RequestParam(value = msg9, required = false) Integer limit

	);

	// ---------------------------------------------------------------------------------------

	public static String endPoint2 = "Factor sanguineo por id";
	public static String return2 = "Retorna un factor sanguineo";
	

	@ApiOperation(value = endPoint2, notes = notes, response = BloodFactor.class, tags = { tagName })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = return2, response = BloodFactor.class),
			@ApiResponse(code = 404, message = org.yacare.api.interfaces.Api.msg404),
			@ApiResponse(code = 422, message = org.yacare.api.interfaces.Api.msg422),
			@ApiResponse(code = 500, message = org.yacare.api.interfaces.Api.msg500) })
	@RequestMapping(value = urlId, produces = { produces }, method = RequestMethod.GET)
	ResponseEntity<BloodFactor> bloodFactorIdGet(
			@ApiParam(value = msg3, required = true) @PathVariable(msg4) String id

	);

}
