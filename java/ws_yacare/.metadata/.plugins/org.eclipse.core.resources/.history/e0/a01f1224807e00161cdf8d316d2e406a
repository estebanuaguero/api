package org.yacare.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.yacare.model.IdentityType;

@Api(value = "identity_types")
public interface IdentityTypesApi {

	@ApiOperation(value = "Tipo de documento de identidad por id", notes = "Tipo de Documento de Identidad de una Persona. Ver https://es.wikipedia.org/wiki/Documento_de_identidad y https://en.wikipedia.org/wiki/Identity_document", response = IdentityType.class, tags = { "IdentityType" })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Tipo de documento de identidad por id", response = IdentityType.class),
			@ApiResponse(code = 404, message = "Recurso no encontrado", response = IdentityType.class),
			@ApiResponse(code = 422, message = "Id inválido", response = IdentityType.class),
			@ApiResponse(code = 500, message = "Error interno del servidor", response = IdentityType.class),
			@ApiResponse(code = 200, message = "Unexpected error", response = IdentityType.class) })
	@RequestMapping(value = "/identity_types/{id}", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<IdentityType> identityTypeIdGet(
			@ApiParam(value = "identificador del tipo de documento de identidad", required = true) @PathVariable("id") String id

	);

	@ApiOperation(value = "Tipos de Documentos de Identidad de personas", notes = "Tipo de Documento de Identidad de una Persona. Ver https://es.wikipedia.org/wiki/Documento_de_identidad y https://en.wikipedia.org/wiki/Identity_document", response = IdentityType.class, responseContainer = "List", tags = { "IdentityType" })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Un listado de todos los tipos de documentos de identidad", response = IdentityType.class),
			@ApiResponse(code = 404, message = "Recurso no encontrado", response = IdentityType.class),
			@ApiResponse(code = 500, message = "Error interno del servidor", response = IdentityType.class),
			@ApiResponse(code = 200, message = "Unexpected error", response = IdentityType.class) })
	@RequestMapping(value = "/identity_types", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<List<IdentityType>> identityTypesGet(
			@ApiParam(value = "Desplazamiento de la lista de resultados devueltos por esta cantidad. El valor predeterminado es cero.") @RequestParam(value = "offset", required = false) Integer offset

			,
			@ApiParam(value = "Número de objetos que se recuperará. El valor predeterminado es 5, el máximo es 100.") @RequestParam(value = "limit", required = false) Integer limit

	);

}
