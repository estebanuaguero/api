package org.yacare.api.interfaces;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.yacare.model.LegalGuardian;

@javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringCodegen", date = "2016-09-12T14:42:20.090Z")

@Api(value = "legal_guardians", description = "the legal_guardians API")
public interface LegalGuardiansApi {

    @ApiOperation(value = "Tutor por id", notes = "Tutor o Responsable Legal de Estudiantes, también llamados tutores legales, o padres.", response = LegalGuardian.class, tags={ "LegalGuardian" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Tutor por id", response = LegalGuardian.class),
        @ApiResponse(code = 404, message = "Recurso no encontrado", response = LegalGuardian.class),
        @ApiResponse(code = 422, message = "Id inválido", response = LegalGuardian.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = LegalGuardian.class) })
    @RequestMapping(value = "/legal_guardians/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<LegalGuardian> legalGuardianIdGet(
@ApiParam(value = "identificador del tutor",required=true ) @PathVariable("id") String id


);


    @ApiOperation(value = "Tutores", notes = "Tutor o Responsable Legal de Estudiantes, también llamados tutores legales, o padres.", response = LegalGuardian.class, responseContainer = "List", tags={ "LegalGuardian" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Un listado de todos los tutores", response = LegalGuardian.class),
        @ApiResponse(code = 404, message = "Recurso no encontrado", response = LegalGuardian.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = LegalGuardian.class) })
    @RequestMapping(value = "/legal_guardians",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<LegalGuardian>> legalGuardiansGet(@ApiParam(value = "Desplazamiento de la lista de resultados devueltos por esta cantidad. El valor predeterminado es cero.") @RequestParam(value = "offset", required = false) Integer offset



,@ApiParam(value = "Número de objetos que se recuperará. El valor predeterminado es 5, el máximo es 100.") @RequestParam(value = "limit", required = false) Integer limit



);

}
