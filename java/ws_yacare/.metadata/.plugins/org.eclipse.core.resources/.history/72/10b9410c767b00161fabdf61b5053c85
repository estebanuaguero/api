package org.yacare.model;

import java.util.Objects;

import org.yacare.model.EducationLevel;
import org.yacare.model.FamilyRelationshipType;
import org.yacare.model.Person;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;



/**
 * Tutor de un estudiante
 **/

/**
 * Tutor de un estudiante
 */
@ApiModel(description = "Tutor de un estudiante")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringCodegen", date = "2016-09-08T13:04:56.524Z")

public class ResponsibleFamily   {
	
  private PersonId person = null;

  private FamilyRelationshipType familyRelationshipType = null;

  private EducationLevel educationLevel = null;

  private String comment = null;

  private String summary = null;

  public ResponsibleFamily person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @ApiModelProperty(value = "")
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public ResponsibleFamily familyRelationshipType(FamilyRelationshipType familyRelationshipType) {
    this.familyRelationshipType = familyRelationshipType;
    return this;
  }

   /**
   * Get familyRelationshipType
   * @return familyRelationshipType
  **/
  @ApiModelProperty(value = "")
  public FamilyRelationshipType getFamilyRelationshipType() {
    return familyRelationshipType;
  }

  public void setFamilyRelationshipType(FamilyRelationshipType familyRelationshipType) {
    this.familyRelationshipType = familyRelationshipType;
  }

  public ResponsibleFamily educationLevel(EducationLevel educationLevel) {
    this.educationLevel = educationLevel;
    return this;
  }

   /**
   * Get educationLevel
   * @return educationLevel
  **/
  @ApiModelProperty(value = "")
  public EducationLevel getEducationLevel() {
    return educationLevel;
  }

  public void setEducationLevel(EducationLevel educationLevel) {
    this.educationLevel = educationLevel;
  }

  public ResponsibleFamily comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comentarios o aclaraciones del tutor.
   * @return comment
  **/
  @ApiModelProperty(value = "Comentarios o aclaraciones del tutor.")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ResponsibleFamily summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Presentación resumida del tutor.
   * @return summary
  **/
  @ApiModelProperty(value = "Presentación resumida del tutor.")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponsibleFamily responsibleFamily = (ResponsibleFamily) o;
    return Objects.equals(this.person, responsibleFamily.person) &&
        Objects.equals(this.familyRelationshipType, responsibleFamily.familyRelationshipType) &&
        Objects.equals(this.educationLevel, responsibleFamily.educationLevel) &&
        Objects.equals(this.comment, responsibleFamily.comment) &&
        Objects.equals(this.summary, responsibleFamily.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, familyRelationshipType, educationLevel, comment, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponsibleFamily {\n");
    
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    familyRelationshipType: ").append(toIndentedString(familyRelationshipType)).append("\n");
    sb.append("    educationLevel: ").append(toIndentedString(educationLevel)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

